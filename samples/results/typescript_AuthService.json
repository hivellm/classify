{
  "file": "typescript/AuthService.ts",
  "classification": {
    "template": "software_project",
    "confidence": 1,
    "domain": "software",
    "docType": "Code Documentation"
  },
  "graphStructure": {
    "cypher": "CREATE (doc:Document {\n      id: \"Authentication Service Documentation\",\n      title: \"Authentication Service Documentation\",\n      domain: \"software\",\n      doc_type: \"Code Documentation\"\n    })\nCREATE (e0:Module {name: \"jsonwebtoken\", description: \"External module for JWT handling\"})\nCREATE (doc)-[:MENTIONS]->(e0)\nCREATE (e1:Class {name: \"AuthService\", description: \"Handles authentication, JWT generation\"})\nCREATE (doc)-[:MENTIONS]->(e1)\nCREATE (e2:Dependency {name: \"Database\", description: \"Database instance for user operations\"})\nCREATE (doc)-[:MENTIONS]->(e2)\nCREATE (e3:Configuration {name: \"jwtSecret\", description: \"Secret key for JWT signing and verification\"})\nCREATE (doc)-[:MENTIONS]->(e3)\nCREATE (e4:Function {name: \"Register\", description: \"Registers a new user by hashing password and creating user in database\"})\nCREATE (doc)-[:MENTIONS]->(e4)\nCREATE (e5:Function {name: \"login\", description: \"Authenticates user and generates JWT token\"})\nCREATE (doc)-[:MENTIONS]->(e5)\nCREATE (e6:Function {name: \"verifyToken\", description: \"Verifies JWT token and returns decoded payload\"})\nCREATE (doc)-[:MENTIONS]->(e6)\nCREATE (e7:Function {name: \"changePassword\", description: \"Changes user password after verifying old password\"})\nCREATE (doc)-[:MENTIONS]->(e7)\nCREATE (e8:Database {name: \"users\", description: \"Database table or collection for user data\"})\nCREATE (doc)-[:MENTIONS]->(e8)",
    "entities": [
      {
        "type": "Module",
        "properties": {
          "name": "jsonwebtoken",
          "description": "External module for JWT handling"
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "AuthService",
          "description": "Handles authentication, JWT generation"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "Database",
          "description": "Database instance for user operations"
        }
      },
      {
        "type": "Configuration",
        "properties": {
          "name": "jwtSecret",
          "description": "Secret key for JWT signing and verification"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "Register",
          "description": "Registers a new user by hashing password and creating user in database"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "login",
          "description": "Authenticates user and generates JWT token"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "verifyToken",
          "description": "Verifies JWT token and returns decoded payload"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "changePassword",
          "description": "Changes user password after verifying old password"
        }
      },
      {
        "type": "Database",
        "properties": {
          "name": "users",
          "description": "Database table or collection for user data"
        }
      }
    ],
    "relationships": [
      {
        "type": "IMPORTS",
        "source": "AuthService",
        "target": "jsonwebtoken",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "AuthService",
        "target": "Database",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "AuthService",
        "target": "jwtSecret",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "AuthService",
        "target": "Register",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "AuthService",
        "target": "login",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "AuthService",
        "target": "verifyToken",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "AuthService",
        "target": "changePassword",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "Register",
        "target": "users",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "login",
        "target": "users",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "changePassword",
        "target": "users",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "Register",
        "target": "Database",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "login",
        "target": "Database",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "changePassword",
        "target": "Database",
        "properties": {}
      }
    ]
  },
  "fulltextMetadata": {
    "title": "Authentication Service Documentation",
    "domain": "software",
    "docType": "Code Documentation",
    "extractedFields": {
      "module_name": "jsonwebtoken",
      "module_description": "External module for JWT handling",
      "class_name": "AuthService",
      "class_description": "Handles authentication, JWT generation",
      "dependency_name": "Database",
      "dependency_description": "Database instance for user operations",
      "configuration_name": "jwtSecret",
      "configuration_description": "Secret key for JWT signing and verification",
      "function_name": [
        "Register",
        "login",
        "verifyToken",
        "changePassword"
      ],
      "function_description": [
        "Registers a new user by hashing password and creating user in database",
        "Authenticates user and generates JWT token",
        "Verifies JWT token and returns decoded payload",
        "Changes user password after verifying old password"
      ],
      "database_name": "users",
      "database_description": "Database table or collection for user data"
    },
    "keywords": [
      "user",
      "password",
      "string",
      "email",
      "token",
      "const",
      "database",
      "param",
      "await",
      "bcrypt",
      "jwtsecret",
      "import",
      "async",
      "promise",
      "hash",
      "hashedpassword",
      "authentication",
      "private",
      "saltrounds",
      "returns"
    ],
    "summary": "This document contains code for an authentication service that handles user registration and login functionality. It securely hashes passwords using bcrypt during registration and verifies them during login, while generating JWT tokens for authenticated sessions. The service also includes token verification capabilities to validate user credentials."
  },
  "cacheInfo": {
    "cached": false,
    "hash": "9de4aec63d0b0f104dcdfc8f796c5f9f7b1710f92b616f4675152e3946ebd107"
  },
  "performance": {
    "totalTimeMs": 29151,
    "tokens": {
      "input": 654,
      "output": 822,
      "total": 1476
    },
    "costUsd": 0.00032172000000000006
  }
}