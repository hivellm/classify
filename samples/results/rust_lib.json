{
  "file": "rust/lib.rs",
  "classification": {
    "template": "software_project",
    "confidence": 1,
    "domain": "software",
    "docType": "Code Documentation"
  },
  "graphStructure": {
    "cypher": "CREATE (doc:Document {\n      id: \"VectorDB Library Documentation\",\n      title: \"VectorDB Library Documentation\",\n      domain: \"software\",\n      doc_type: \"Code Documentation\"\n    })\nCREATE (e0:Module {name: \"Library\", description: \"Provides HNSW indexing functionality\"})\nCREATE (doc)-[:MENTIONS]->(e0)\nCREATE (e1:Class {name: \"VectorDB\", description: \"Vector database instance with storage, index, and metadata\"})\nCREATE (doc)-[:MENTIONS]->(e1)\nCREATE (e2:Function {name: \"new\", description: \"Create a new vector database instance\"})\nCREATE (doc)-[:MENTIONS]->(e2)\nCREATE (e3:Function {name: \"insert\", description: \"Insert a vector with ID and metadata into the database\"})\nCREATE (doc)-[:MENTIONS]->(e3)\nCREATE (e4:Function {name: \"search\", description: \"Search for similar vectors based on a query\"})\nCREATE (doc)-[:MENTIONS]->(e4)\nCREATE (e5:Function {name: \"delete\", description: \"Delete an entry by ID from the database\"})\nCREATE (doc)-[:MENTIONS]->(e5)\nCREATE (e6:Function {name: \"count\", description: \"Get the count of entries in the database\"})\nCREATE (doc)-[:MENTIONS]->(e6)\nCREATE (e7:Dependency {name: \"anyhow\", description: \"Error handling library\"})\nCREATE (doc)-[:MENTIONS]->(e7)\nCREATE (e8:Dependency {name: \"serde\", description: \"Serialization and deserialization framework\"})\nCREATE (doc)-[:MENTIONS]->(e8)\nCREATE (e9:Dependency {name: \"std::collections::HashMap\", description: \"Standard library hash map for key-value storage\"})\nCREATE (doc)-[:MENTIONS]->(e9)\nCREATE (e10:Dependency {name: \"std::path::Path\", description: \"Standard library path handling\"})\nCREATE (doc)-[:MENTIONS]->(e10)\nCREATE (e11:Dependency {name: \"serde_json\", description: \"JSON serialization and deserialization\"})\nCREATE (doc)-[:MENTIONS]->(e11)\nCREATE (e12:API {name: \"storage::Storage\", description: \"Storage API for data persistence\"})\nCREATE (doc)-[:MENTIONS]->(e12)\nCREATE (e13:API {name: \"hnsw::Index\", description: \"HNSW indexing API for vector operations\"})\nCREATE (doc)-[:MENTIONS]->(e13)\nCREATE (e14:Database {name: \"VectorDB\", description: \"Vector database handling storage and indexing\"})\nCREATE (doc)-[:MENTIONS]->(e14)\nCREATE (e15:Documentation {name: \"Library Documentation\", description: \"Documentation for the VectorDB library and its functions\"})\nCREATE (doc)-[:MENTIONS]->(e15)",
    "entities": [
      {
        "type": "Module",
        "properties": {
          "name": "Library",
          "description": "Provides HNSW indexing functionality"
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "VectorDB",
          "description": "Vector database instance with storage, index, and metadata"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "new",
          "description": "Create a new vector database instance"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "insert",
          "description": "Insert a vector with ID and metadata into the database"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "search",
          "description": "Search for similar vectors based on a query"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "delete",
          "description": "Delete an entry by ID from the database"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "count",
          "description": "Get the count of entries in the database"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "anyhow",
          "description": "Error handling library"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "serde",
          "description": "Serialization and deserialization framework"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "std::collections::HashMap",
          "description": "Standard library hash map for key-value storage"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "std::path::Path",
          "description": "Standard library path handling"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "serde_json",
          "description": "JSON serialization and deserialization"
        }
      },
      {
        "type": "API",
        "properties": {
          "name": "storage::Storage",
          "description": "Storage API for data persistence"
        }
      },
      {
        "type": "API",
        "properties": {
          "name": "hnsw::Index",
          "description": "HNSW indexing API for vector operations"
        }
      },
      {
        "type": "Database",
        "properties": {
          "name": "VectorDB",
          "description": "Vector database handling storage and indexing"
        }
      },
      {
        "type": "Documentation",
        "properties": {
          "name": "Library Documentation",
          "description": "Documentation for the VectorDB library and its functions"
        }
      }
    ],
    "relationships": [
      {
        "type": "IMPORTS",
        "source": "Library",
        "target": "anyhow",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "Library",
        "target": "serde",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "Library",
        "target": "std::collections::HashMap",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "Library",
        "target": "std::path::Path",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "Library",
        "target": "serde_json",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "Library",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "VectorDB",
        "target": "new",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "VectorDB",
        "target": "insert",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "VectorDB",
        "target": "search",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "VectorDB",
        "target": "delete",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "VectorDB",
        "target": "count",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "VectorDB",
        "target": "storage::Storage",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "VectorDB",
        "target": "hnsw::Index",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "new",
        "target": "storage::Storage",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "new",
        "target": "hnsw::Index",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "insert",
        "target": "hnsw::Index",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "insert",
        "target": "storage::Storage",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "search",
        "target": "hnsw::Index",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "delete",
        "target": "hnsw::Index",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "delete",
        "target": "storage::Storage",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "insert",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "search",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "delete",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "count",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "DOCUMENTS",
        "source": "Library Documentation",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "DOCUMENTS",
        "source": "Library Documentation",
        "target": "new",
        "properties": {}
      },
      {
        "type": "DOCUMENTS",
        "source": "Library Documentation",
        "target": "insert",
        "properties": {}
      },
      {
        "type": "DOCUMENTS",
        "source": "Library Documentation",
        "target": "search",
        "properties": {}
      },
      {
        "type": "DOCUMENTS",
        "source": "Library Documentation",
        "target": "delete",
        "properties": {}
      },
      {
        "type": "DOCUMENTS",
        "source": "Library Documentation",
        "target": "count",
        "properties": {}
      }
    ]
  },
  "fulltextMetadata": {
    "title": "VectorDB Library Documentation",
    "domain": "software",
    "docType": "Code Documentation",
    "extractedFields": {
      "module_name": "Library",
      "module_description": "Provides HNSW indexing functionality",
      "class_name": "VectorDB",
      "class_description": "Vector database instance with storage, index, and metadata",
      "function_name": [
        "new",
        "insert",
        "search",
        "delete",
        "count"
      ],
      "function_description": [
        "Create a new vector database instance",
        "Insert a vector with ID and metadata into the database",
        "Search for similar vectors based on a query",
        "Delete an entry by ID from the database",
        "Get the count of entries in the database"
      ],
      "dependency_name": [
        "anyhow",
        "serde",
        "std::collections::HashMap",
        "std::path::Path",
        "serde_json"
      ],
      "dependency_description": [
        "Error handling library",
        "Serialization and deserialization framework",
        "Standard library hash map for key-value storage",
        "Standard library path handling",
        "JSON serialization and deserialization"
      ],
      "api_name": [
        "storage::Storage",
        "hnsw::Index"
      ],
      "api_description": [
        "Storage API for data persistence",
        "HNSW indexing API for vector operations"
      ],
      "database_name": "VectorDB",
      "database_description": "Vector database handling storage and indexing",
      "documentation_name": "Library Documentation",
      "documentation_description": "Documentation for the VectorDB library and its functions"
    },
    "keywords": [
      "vector",
      "self",
      "storage",
      "index",
      "metadata",
      "path",
      "dimension",
      "result",
      "database",
      "search",
      "insert",
      "async",
      "test",
      "hnsw",
      "vectordb",
      "string",
      "query",
      "context",
      "hashmap",
      "instance"
    ],
    "summary": "This document describes a vector database library that provides high-performance vector storage and similarity search capabilities using HNSW indexing. The library supports operations for creating database instances, inserting vectors with associated metadata, and performing similarity searches. It includes modules for storage handling, data models, and database operations with error handling and serialization support."
  },
  "cacheInfo": {
    "cached": false,
    "hash": "9222e88176510bc105ebcc3bc8f554a3978b7aa0c3073d4dfa9031084900ba3f"
  },
  "performance": {
    "totalTimeMs": 55444,
    "tokens": {
      "input": 643,
      "output": 1683,
      "total": 2326
    },
    "costUsd": 0.0005612600000000001
  }
}