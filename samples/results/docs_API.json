{
  "file": "docs/API.md",
  "classification": {
    "template": "software_project",
    "confidence": 1,
    "domain": "software",
    "docType": "Documentation"
  },
  "graphStructure": {
    "cypher": "CREATE (doc:Document {\n      id: \"API Documentation\",\n      title: \"API Documentation\",\n      domain: \"software\",\n      doc_type: \"Documentation\"\n    })\nCREATE (e0:API {name: \"User Management System API\", base_url: \"http://localhost:3000/api\", authentication: \"JWT\", rate_limiting: \"100 requests per 15 minutes per IP\"})\nCREATE (doc)-[:MENTIONS]->(e0)\nCREATE (e1:Module {name: \"Authentication Module\", description: \"Handles user registration, login, and JWT token management\"})\nCREATE (doc)-[:MENTIONS]->(e1)\nCREATE (e2:Module {name: \"User Profile Module\", description: \"Manages user profile data and operations\"})\nCREATE (doc)-[:MENTIONS]->(e2)\nCREATE (e3:Module {name: \"User Management Module\", description: \"Handles user listing and deletion operations\"})\nCREATE (doc)-[:MENTIONS]->(e3)\nCREATE (e4:Module {name: \"Health Check Module\", description: \"Provides service health status\"})\nCREATE (doc)-[:MENTIONS]->(e4)\nCREATE (e5:Function {name: \"register\", method: \"POST\", endpoint: \"/register\", description: \"Register a new user\"})\nCREATE (doc)-[:MENTIONS]->(e5)\nCREATE (e6:Function {name: \"login\", method: \"POST\", endpoint: \"/login\", description: \"Authenticate user and receive JWT token\"})\nCREATE (doc)-[:MENTIONS]->(e6)\nCREATE (e7:Function {name: \"getProfile\", method: \"GET\", endpoint: \"/profile\", description: \"Get current user profile\"})\nCREATE (doc)-[:MENTIONS]->(e7)\nCREATE (e8:Function {name: \"updateProfile\", method: \"PUT\", endpoint: \"/profile\", description: \"Update user profile\"})\nCREATE (doc)-[:MENTIONS]->(e8)\nCREATE (e9:Function {name: \"changePassword\", method: \"POST\", endpoint: \"/change-password\", description: \"Change user password\"})\nCREATE (doc)-[:MENTIONS]->(e9)\nCREATE (e10:Function {name: \"listUsers\", method: \"GET\", endpoint: \"/users\", description: \"List all users (paginated)\"})\nCREATE (doc)-[:MENTIONS]->(e10)\nCREATE (e11:Function {name: \"deleteUser\", method: \"DELETE\", endpoint: \"/users/:id\", description: \"Delete a user\"})\nCREATE (doc)-[:MENTIONS]->(e11)\nCREATE (e12:Function {name: \"healthCheck\", method: \"GET\", endpoint: \"/health\", description: \"Service health check\"})\nCREATE (doc)-[:MENTIONS]->(e12)\nCREATE (e13:Database {name: \"User Database\", description: \"Stores user information including email, password hash, profile data\"})\nCREATE (doc)-[:MENTIONS]->(e13)\nCREATE (e14:Dependency {name: \"bcrypt\", description: \"Password hashing library with 10 salt rounds\"})\nCREATE (doc)-[:MENTIONS]->(e14)\nCREATE (e15:Dependency {name: \"JWT\", description: \"JSON Web Token implementation for authentication\"})\nCREATE (doc)-[:MENTIONS]->(e15)\nCREATE (e16:Dependency {name: \"Helmet.js\", description: \"Security headers middleware\"})\nCREATE (doc)-[:MENTIONS]->(e16)\nCREATE (e17:Configuration {name: \"Security Configuration\", description: \"JWT tokens expire after 24 hours, HTTPS recommended, CORS enabled\"})\nCREATE (doc)-[:MENTIONS]->(e17)\nCREATE (e18:Documentation {name: \"API Documentation\", description: \"REST API specification for User Management System\"})\nCREATE (doc)-[:MENTIONS]->(e18)",
    "entities": [
      {
        "type": "API",
        "properties": {
          "name": "User Management System API",
          "base_url": "http://localhost:3000/api",
          "authentication": "JWT",
          "rate_limiting": "100 requests per 15 minutes per IP"
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "Authentication Module",
          "description": "Handles user registration, login, and JWT token management"
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "User Profile Module",
          "description": "Manages user profile data and operations"
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "User Management Module",
          "description": "Handles user listing and deletion operations"
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "Health Check Module",
          "description": "Provides service health status"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "register",
          "method": "POST",
          "endpoint": "/register",
          "description": "Register a new user"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "login",
          "method": "POST",
          "endpoint": "/login",
          "description": "Authenticate user and receive JWT token"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "getProfile",
          "method": "GET",
          "endpoint": "/profile",
          "description": "Get current user profile"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "updateProfile",
          "method": "PUT",
          "endpoint": "/profile",
          "description": "Update user profile"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "changePassword",
          "method": "POST",
          "endpoint": "/change-password",
          "description": "Change user password"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "listUsers",
          "method": "GET",
          "endpoint": "/users",
          "description": "List all users (paginated)"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "deleteUser",
          "method": "DELETE",
          "endpoint": "/users/:id",
          "description": "Delete a user"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "healthCheck",
          "method": "GET",
          "endpoint": "/health",
          "description": "Service health check"
        }
      },
      {
        "type": "Database",
        "properties": {
          "name": "User Database",
          "description": "Stores user information including email, password hash, profile data"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "bcrypt",
          "description": "Password hashing library with 10 salt rounds"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "JWT",
          "description": "JSON Web Token implementation for authentication"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "Helmet.js",
          "description": "Security headers middleware"
        }
      },
      {
        "type": "Configuration",
        "properties": {
          "name": "Security Configuration",
          "description": "JWT tokens expire after 24 hours, HTTPS recommended, CORS enabled"
        }
      },
      {
        "type": "Documentation",
        "properties": {
          "name": "API Documentation",
          "description": "REST API specification for User Management System"
        }
      }
    ],
    "relationships": [
      {
        "type": "EXPOSES",
        "source": "User Management System API",
        "target": "Authentication Module",
        "properties": {}
      },
      {
        "type": "EXPOSES",
        "source": "User Management System API",
        "target": "User Profile Module",
        "properties": {}
      },
      {
        "type": "EXPOSES",
        "source": "User Management System API",
        "target": "User Management Module",
        "properties": {}
      },
      {
        "type": "EXPOSES",
        "source": "User Management System API",
        "target": "Health Check Module",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "Authentication Module",
        "target": "register",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "Authentication Module",
        "target": "login",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "User Profile Module",
        "target": "getProfile",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "User Profile Module",
        "target": "updateProfile",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "User Profile Module",
        "target": "changePassword",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "User Management Module",
        "target": "listUsers",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "User Management Module",
        "target": "deleteUser",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "Health Check Module",
        "target": "healthCheck",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "register",
        "target": "User Database",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "login",
        "target": "User Database",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "getProfile",
        "target": "User Database",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "updateProfile",
        "target": "User Database",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "changePassword",
        "target": "User Database",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "listUsers",
        "target": "User Database",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "deleteUser",
        "target": "User Database",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "Authentication Module",
        "target": "bcrypt",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "Authentication Module",
        "target": "JWT",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "User Management System API",
        "target": "Helmet.js",
        "properties": {}
      },
      {
        "type": "IMPLEMENTS",
        "source": "User Management System API",
        "target": "Security Configuration",
        "properties": {}
      },
      {
        "type": "DOCUMENTS",
        "source": "API Documentation",
        "target": "User Management System API",
        "properties": {}
      }
    ]
  },
  "fulltextMetadata": {
    "title": "API Documentation",
    "domain": "software",
    "docType": "Documentation",
    "extractedFields": {
      "api_name": "User Management System API",
      "api_base_url": "http://localhost:3000/api",
      "api_authentication": "JWT",
      "api_rate_limiting": "100 requests per 15 minutes per IP",
      "module_name": [
        "Authentication Module",
        "User Profile Module",
        "User Management Module",
        "Health Check Module"
      ],
      "module_description": [
        "Handles user registration, login, and JWT token management",
        "Manages user profile data and operations",
        "Handles user listing and deletion operations",
        "Provides service health status"
      ],
      "function_name": [
        "register",
        "login",
        "getProfile",
        "updateProfile",
        "changePassword",
        "listUsers",
        "deleteUser",
        "healthCheck"
      ],
      "function_method": [
        "POST",
        "POST",
        "GET",
        "PUT",
        "POST",
        "GET",
        "DELETE",
        "GET"
      ],
      "function_endpoint": [
        "/register",
        "/login",
        "/profile",
        "/profile",
        "/change-password",
        "/users",
        "/users/:id",
        "/health"
      ],
      "function_description": [
        "Register a new user",
        "Authenticate user and receive JWT token",
        "Get current user profile",
        "Update user profile",
        "Change user password",
        "List all users (paginated)",
        "Delete a user",
        "Service health check"
      ],
      "database_name": "User Database",
      "database_description": "Stores user information including email, password hash, profile data",
      "dependency_name": [
        "bcrypt",
        "JWT",
        "Helmet.js"
      ],
      "dependency_description": [
        "Password hashing library with 10 salt rounds",
        "JSON Web Token implementation for authentication",
        "Security headers middleware"
      ],
      "configuration_name": "Security Configuration",
      "configuration_description": "JWT tokens expire after 24 hours, HTTPS recommended, CORS enabled",
      "documentation_name": "API Documentation",
      "documentation_description": "REST API specification for User Management System"
    },
    "keywords": [
      "user",
      "json",
      "error",
      "email",
      "authentication",
      "token",
      "example",
      "password",
      "response",
      "name",
      "success",
      "true",
      "authorization",
      "errors",
      "bearer",
      "john",
      "data",
      "server",
      "requires",
      "headers"
    ],
    "summary": "This document outlines a REST API for a User Management System with a base URL at localhost:3000/api, requiring JWT authentication for most endpoints. It details key endpoints including user registration (POST /register), login to obtain a JWT token (POST /login), and authenticated profile retrieval and updates (GET /PUT /profile). Each endpoint specifies request/response formats and potential error codes."
  },
  "cacheInfo": {
    "cached": false,
    "hash": "bc17ccda3ba6d474e1241be98b770851838febf7118a5da921f9cb318e7a7e00"
  },
  "performance": {
    "totalTimeMs": 57292,
    "tokens": {
      "input": 1881,
      "output": 1757,
      "total": 3638
    },
    "costUsd": 0.0007553000000000001
  }
}