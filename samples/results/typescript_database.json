{
  "file": "typescript/database.ts",
  "classification": {
    "template": "software_project",
    "confidence": 1,
    "domain": "software",
    "docType": "TypeScript/JavaScript Code Document"
  },
  "graphStructure": {
    "cypher": "CREATE (doc:Document {\n      id: \"PostgreSQL Database Connection and Repository Implementation\",\n      title: \"PostgreSQL Database Connection and Repository Implementation\",\n      domain: \"software\",\n      doc_type: \"TypeScript/JavaScript Code Document\"\n    })\nCREATE (e0:Module {name: \"util\", imports: \"promisify,Pool\"})\nCREATE (doc)-[:MENTIONS]->(e0)\nCREATE (e1:Module {name: \"pg\", imports: \"Pool\"})\nCREATE (doc)-[:MENTIONS]->(e1)\nCREATE (e2:Class {name: \"Connection\", description: \"PostgreSQL connection class with repository management\"})\nCREATE (doc)-[:MENTIONS]->(e2)\nCREATE (e3:Class {name: \"UserRepository\", description: \"User data repository with CRUD operations\"})\nCREATE (doc)-[:MENTIONS]->(e3)\nCREATE (e4:Class {name: \"SessionRepository\", description: \"Session data repository with token management\"})\nCREATE (doc)-[:MENTIONS]->(e4)\nCREATE (e5:Function {name: \"Execute SQL Query\", description: \"Executes SQL queries with parameters\"})\nCREATE (doc)-[:MENTIONS]->(e5)\nCREATE (e6:Function {name: \"Transaction\", description: \"Handles database transactions with rollback support\"})\nCREATE (doc)-[:MENTIONS]->(e6)\nCREATE (e7:Function {name: \"Close\", description: \"Closes the database connection pool\"})\nCREATE (doc)-[:MENTIONS]->(e7)\nCREATE (e8:Function {name: \"healthCheck\", description: \"Performs health check on database connection\"})\nCREATE (doc)-[:MENTIONS]->(e8)\nCREATE (e9:Database {name: \"PostgreSQL\", type: \"Relational Database\"})\nCREATE (doc)-[:MENTIONS]->(e9)\nCREATE (e10:Configuration {name: \"Pool Configuration\", properties: \"[object Object]\"})\nCREATE (doc)-[:MENTIONS]->(e10)",
    "entities": [
      {
        "type": "Module",
        "properties": {
          "name": "util",
          "imports": [
            "promisify",
            [
              "Pool"
            ]
          ]
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "pg",
          "imports": [
            "Pool"
          ]
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "Connection",
          "description": "PostgreSQL connection class with repository management"
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "UserRepository",
          "description": "User data repository with CRUD operations"
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "SessionRepository",
          "description": "Session data repository with token management"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "Execute SQL Query",
          "description": "Executes SQL queries with parameters"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "Transaction",
          "description": "Handles database transactions with rollback support"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "Close",
          "description": "Closes the database connection pool"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "healthCheck",
          "description": "Performs health check on database connection"
        }
      },
      {
        "type": "Database",
        "properties": {
          "name": "PostgreSQL",
          "type": "Relational Database"
        }
      },
      {
        "type": "Configuration",
        "properties": {
          "name": "Pool Configuration",
          "properties": {
            "max": 20,
            "idleTimeoutMillis": 30000,
            "connectionTimeoutMillis": 2000
          }
        }
      }
    ],
    "relationships": [
      {
        "type": "IMPORTS",
        "source": "Connection",
        "target": "util",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "Connection",
        "target": "pg",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "Connection",
        "target": "UserRepository",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "Connection",
        "target": "SessionRepository",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "UserRepository",
        "target": "PostgreSQL",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "SessionRepository",
        "target": "PostgreSQL",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "Connection",
        "target": "Pool Configuration",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "Execute SQL Query",
        "target": "PostgreSQL",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "Transaction",
        "target": "PostgreSQL",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "Close",
        "target": "PostgreSQL",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "healthCheck",
        "target": "Execute SQL Query",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "UserRepository",
        "target": "PostgreSQL",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "SessionRepository",
        "target": "PostgreSQL",
        "properties": {}
      }
    ]
  },
  "fulltextMetadata": {
    "title": "PostgreSQL Database Connection and Repository Implementation",
    "domain": "software",
    "docType": "TypeScript/JavaScript Code Document",
    "extractedFields": {
      "module_name": [
        "util",
        "pg"
      ],
      "module_imports": [
        "promisify",
        [
          "Pool"
        ]
      ],
      "class_name": [
        "Connection",
        "UserRepository",
        "SessionRepository"
      ],
      "class_description": [
        "PostgreSQL connection class with repository management",
        "User data repository with CRUD operations",
        "Session data repository with token management"
      ],
      "function_name": [
        "Execute SQL Query",
        "Transaction",
        "Close",
        "healthCheck"
      ],
      "function_description": [
        "Executes SQL queries with parameters",
        "Handles database transactions with rollback support",
        "Closes the database connection pool",
        "Performs health check on database connection"
      ],
      "database_name": "PostgreSQL",
      "database_type": "Relational Database",
      "configuration_name": "Pool Configuration",
      "configuration_properties": {
        "max": 20,
        "idleTimeoutMillis": 30000,
        "connectionTimeoutMillis": 2000
      }
    },
    "keywords": [
      "pool",
      "query",
      "string",
      "await",
      "result",
      "const",
      "promise",
      "async",
      "client",
      "return",
      "users",
      "database",
      "sessions",
      "rows",
      "callback",
      "interface",
      "class",
      "private",
      "userrepository",
      "sessionrepository"
    ],
    "summary": "This document defines a PostgreSQL database connection manager class that handles connection pooling, query execution, and transactions. It includes repository classes for users and sessions, and provides methods for health checks and connection management. The implementation supports both direct queries and transactional operations with proper error handling and resource cleanup."
  },
  "cacheInfo": {
    "cached": false,
    "hash": "98a73c3b4bd6baee27768fffc452d73e6eb65b1862b3d152f847589555d2af14"
  },
  "performance": {
    "totalTimeMs": 32481,
    "tokens": {
      "input": 872,
      "output": 912,
      "total": 1784
    },
    "costUsd": 0.00037744000000000005
  }
}