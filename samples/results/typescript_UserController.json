{
  "file": "typescript/UserController.ts",
  "classification": {
    "template": "software_project",
    "confidence": 1,
    "domain": "software",
    "docType": "Class Documentation"
  },
  "graphStructure": {
    "cypher": "CREATE (doc:Document {\n      id: \"UserController\",\n      title: \"UserController\",\n      domain: \"software\",\n      doc_type: \"Class Documentation\"\n    })\nCREATE (e0:Class {name: \"UserController\", methods: \"register,login,getProfile,updateProfile,changePassword\"})\nCREATE (doc)-[:MENTIONS]->(e0)\nCREATE (e1:Module {name: \"express\", imports: \"Request,Response,NextFunction,AuthService,UserService,ValidationError\"})\nCREATE (doc)-[:MENTIONS]->(e1)\nCREATE (e2:Module {name: \"./AuthService.js\", imports: \"AuthService\"})\nCREATE (doc)-[:MENTIONS]->(e2)\nCREATE (e3:Module {name: \"./UserService.js\", imports: \"UserService\"})\nCREATE (doc)-[:MENTIONS]->(e3)\nCREATE (e4:Module {name: \"./errors/ValidationError.js\", imports: \"ValidationError\"})\nCREATE (doc)-[:MENTIONS]->(e4)\nCREATE (e5:Function {name: \"register\", method: \"POST\", endpoint: \"/api/users/register\"})\nCREATE (doc)-[:MENTIONS]->(e5)\nCREATE (e6:Function {name: \"login\", method: \"POST\", endpoint: \"Authenticate JWT token\"})\nCREATE (doc)-[:MENTIONS]->(e6)\nCREATE (e7:Function {name: \"getProfile\", method: \"GET\", endpoint: \"Get (requires authentication)\"})\nCREATE (doc)-[:MENTIONS]->(e7)\nCREATE (e8:Function {name: \"updateProfile\", method: \"PUT\", endpoint: \"Update\"})\nCREATE (doc)-[:MENTIONS]->(e8)\nCREATE (e9:Function {name: \"changePassword\", method: \"POST\", endpoint: \"Change\"})\nCREATE (doc)-[:MENTIONS]->(e9)\nCREATE (e10:API {name: \"User HTTP requests\"})\nCREATE (doc)-[:MENTIONS]->(e10)",
    "entities": [
      {
        "type": "Class",
        "properties": {
          "name": "UserController",
          "methods": [
            "register",
            "login",
            "getProfile",
            "updateProfile",
            "changePassword"
          ]
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "express",
          "imports": [
            "Request",
            "Response",
            "NextFunction",
            [
              "AuthService"
            ],
            [
              "UserService"
            ],
            [
              "ValidationError"
            ]
          ]
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "./AuthService.js",
          "imports": [
            "AuthService"
          ]
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "./UserService.js",
          "imports": [
            "UserService"
          ]
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "./errors/ValidationError.js",
          "imports": [
            "ValidationError"
          ]
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "register",
          "method": "POST",
          "endpoint": "/api/users/register"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "login",
          "method": "POST",
          "endpoint": "Authenticate JWT token"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "getProfile",
          "method": "GET",
          "endpoint": "Get (requires authentication)"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "updateProfile",
          "method": "PUT",
          "endpoint": "Update"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "changePassword",
          "method": "POST",
          "endpoint": "Change"
        }
      },
      {
        "type": "API",
        "properties": {
          "name": "User HTTP requests"
        }
      }
    ],
    "relationships": [
      {
        "type": "IMPORTS",
        "source": "UserController",
        "target": "express",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "UserController",
        "target": "./AuthService.js",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "UserController",
        "target": "./UserService.js",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "UserController",
        "target": "./errors/ValidationError.js",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "UserController",
        "target": "AuthService",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "UserController",
        "target": "UserService",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "UserController",
        "target": "register",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "UserController",
        "target": "login",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "UserController",
        "target": "getProfile",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "UserController",
        "target": "updateProfile",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "UserController",
        "target": "changePassword",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "register",
        "target": "AuthService.register",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "register",
        "target": "UserService.updateProfile",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "login",
        "target": "AuthService.login",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "getProfile",
        "target": "UserService.getProfile",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "updateProfile",
        "target": "UserService.updateProfile",
        "properties": {}
      },
      {
        "type": "EXPOSES",
        "source": "UserController",
        "target": "API",
        "properties": {}
      }
    ]
  },
  "fulltextMetadata": {
    "title": "UserController",
    "domain": "software",
    "docType": "Class Documentation",
    "extractedFields": {
      "class_name": "UserController",
      "class_methods": [
        "register",
        "login",
        "getProfile",
        "updateProfile",
        "changePassword"
      ],
      "module_name": [
        "express",
        "./AuthService.js",
        "./UserService.js",
        "./errors/ValidationError.js"
      ],
      "module_imports": [
        "Request",
        "Response",
        "NextFunction",
        [
          "AuthService"
        ],
        [
          "UserService"
        ],
        [
          "ValidationError"
        ]
      ],
      "function_name": [
        "register",
        "login",
        "getProfile",
        "updateProfile",
        "changePassword"
      ],
      "function_method": [
        "POST",
        "POST",
        "GET",
        "PUT",
        "POST"
      ],
      "function_endpoint": [
        "/api/users/register",
        "Authenticate JWT token",
        "Get (requires authentication)",
        "Update",
        "Change"
      ],
      "api_name": "User HTTP requests"
    },
    "keywords": [
      "user",
      "const",
      "password",
      "userservice",
      "next",
      "authservice",
      "validationerror",
      "email",
      "throw",
      "request",
      "response",
      "nextfunction",
      "name",
      "required",
      "users",
      "async",
      "promise",
      "void",
      "register",
      "import"
    ],
    "summary": "This document contains a TypeScript UserController class that handles user authentication endpoints. It provides register and login methods that validate input requirements (email, password, name) and interact with AuthService and UserService dependencies. The controller returns appropriate HTTP responses with success data or forwards errors for handling."
  },
  "cacheInfo": {
    "cached": false,
    "hash": "21080d426b044ff56f9d62f3423e64dd57a510e6b47331676ca5d517fdaccae9"
  },
  "performance": {
    "totalTimeMs": 35963,
    "tokens": {
      "input": 768,
      "output": 1059,
      "total": 1827
    },
    "costUsd": 0.00040404000000000004
  }
}