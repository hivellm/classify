{
  "file": "typescript/UserController.ts",
  "classification": {
    "template": "software_project",
    "confidence": 0.95,
    "domain": "software",
    "docType": "TypeScript Class Definition"
  },
  "graphStructure": {
    "cypher": "CREATE (doc:Document {\n      id: \"UserController\",\n      title: \"UserController\",\n      domain: \"software\",\n      doc_type: \"TypeScript Class Definition\"\n    })\nCREATE (e0:Class {name: \"UserController\", access_modifier: \"public\", methods: \"register,login,getProfile,updateProfile,changePassword,register,login,updateProfile,getProfile\"})\nCREATE (doc)-[:MENTIONS]->(e0)\nCREATE (e1:Module {name: \"express\", imports: \"Request,Response,NextFunction,AuthService,UserService,ValidationError\"})\nCREATE (doc)-[:MENTIONS]->(e1)\nCREATE (e2:Module {name: \"./AuthService.js\", imports: \"AuthService\"})\nCREATE (doc)-[:MENTIONS]->(e2)\nCREATE (e3:Module {name: \"./UserService.js\", imports: \"UserService\"})\nCREATE (doc)-[:MENTIONS]->(e3)\nCREATE (e4:Module {name: \"./errors/ValidationError.js\", imports: \"ValidationError\"})\nCREATE (doc)-[:MENTIONS]->(e4)\nCREATE (e5:Class {name: \"AuthService\", methods: \"register,login\"})\nCREATE (doc)-[:MENTIONS]->(e5)\nCREATE (e6:Class {name: \"UserService\", methods: \"updateProfile,getProfile\"})\nCREATE (doc)-[:MENTIONS]->(e6)\nCREATE (e7:Class {name: \"ValidationError\", extends: \"Error\"})\nCREATE (doc)-[:MENTIONS]->(e7)\nCREATE (e8:Function {name: \"register\", http_method: \"POST\", endpoint: \"/api/users/register\"})\nCREATE (doc)-[:MENTIONS]->(e8)\nCREATE (e9:Function {name: \"login\", http_method: \"POST\", endpoint: \"/api/users/login\"})\nCREATE (doc)-[:MENTIONS]->(e9)\nCREATE (e10:Function {name: \"getProfile\", http_method: \"GET\", requires_auth: \"true\"})\nCREATE (doc)-[:MENTIONS]->(e10)\nCREATE (e11:Function {name: \"updateProfile\", http_method: \"PUT\", requires_auth: \"true\"})\nCREATE (doc)-[:MENTIONS]->(e11)\nCREATE (e12:Function {name: \"changePassword\", http_method: \"POST\", requires_auth: \"true\"})\nCREATE (doc)-[:MENTIONS]->(e12)\nCREATE (e13:API {name: \"User API\", base_path: \"/api/users\", endpoints: \"/register,/login,/profile,/change-password\"})\nCREATE (doc)-[:MENTIONS]->(e13)",
    "entities": [
      {
        "type": "Class",
        "properties": {
          "name": "UserController",
          "access_modifier": "public",
          "methods": [
            "register",
            "login",
            "getProfile",
            "updateProfile",
            "changePassword",
            [
              "register",
              "login"
            ],
            [
              "updateProfile",
              "getProfile"
            ]
          ]
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "express",
          "imports": [
            "Request",
            "Response",
            "NextFunction",
            [
              "AuthService"
            ],
            [
              "UserService"
            ],
            [
              "ValidationError"
            ]
          ]
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "./AuthService.js",
          "imports": [
            "AuthService"
          ]
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "./UserService.js",
          "imports": [
            "UserService"
          ]
        }
      },
      {
        "type": "Module",
        "properties": {
          "name": "./errors/ValidationError.js",
          "imports": [
            "ValidationError"
          ]
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "AuthService",
          "methods": [
            "register",
            "login"
          ]
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "UserService",
          "methods": [
            "updateProfile",
            "getProfile"
          ]
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "ValidationError",
          "extends": "Error"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "register",
          "http_method": "POST",
          "endpoint": "/api/users/register"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "login",
          "http_method": "POST",
          "endpoint": "/api/users/login"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "getProfile",
          "http_method": "GET",
          "requires_auth": true
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "updateProfile",
          "http_method": "PUT",
          "requires_auth": true
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "changePassword",
          "http_method": "POST",
          "requires_auth": true
        }
      },
      {
        "type": "API",
        "properties": {
          "name": "User API",
          "base_path": "/api/users",
          "endpoints": [
            "/register",
            "/login",
            "/profile",
            "/change-password"
          ]
        }
      }
    ],
    "relationships": [
      {
        "type": "IMPORTS",
        "source": "UserController",
        "target": "express",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "UserController",
        "target": "./AuthService.js",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "UserController",
        "target": "./UserService.js",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "UserController",
        "target": "./errors/ValidationError.js",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "UserController",
        "target": "AuthService",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "UserController",
        "target": "UserService",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "UserController",
        "target": "register",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "UserController",
        "target": "login",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "UserController",
        "target": "getProfile",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "UserController",
        "target": "updateProfile",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "UserController",
        "target": "changePassword",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "register",
        "target": "AuthService.register",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "register",
        "target": "UserService.updateProfile",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "login",
        "target": "AuthService.login",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "getProfile",
        "target": "UserService.getProfile",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "updateProfile",
        "target": "UserService.updateProfile",
        "properties": {}
      },
      {
        "type": "EXPOSES",
        "source": "UserController",
        "target": "User API",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "getProfile",
        "target": "req.user",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "updateProfile",
        "target": "req.user",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "changePassword",
        "target": "req.user",
        "properties": {}
      }
    ]
  },
  "fulltextMetadata": {
    "title": "UserController",
    "domain": "software",
    "docType": "TypeScript Class Definition",
    "extractedFields": {
      "class_name": [
        "UserController",
        "AuthService",
        "UserService",
        "ValidationError"
      ],
      "class_access_modifier": "public",
      "class_methods": [
        "register",
        "login",
        "getProfile",
        "updateProfile",
        "changePassword",
        [
          "register",
          "login"
        ],
        [
          "updateProfile",
          "getProfile"
        ]
      ],
      "module_name": [
        "express",
        "./AuthService.js",
        "./UserService.js",
        "./errors/ValidationError.js"
      ],
      "module_imports": [
        "Request",
        "Response",
        "NextFunction",
        [
          "AuthService"
        ],
        [
          "UserService"
        ],
        [
          "ValidationError"
        ]
      ],
      "class_extends": "Error",
      "function_name": [
        "register",
        "login",
        "getProfile",
        "updateProfile",
        "changePassword"
      ],
      "function_http_method": [
        "POST",
        "POST",
        "GET",
        "PUT",
        "POST"
      ],
      "function_endpoint": [
        "/api/users/register",
        "/api/users/login"
      ],
      "function_requires_auth": [
        true,
        true,
        true
      ],
      "api_name": "User API",
      "api_base_path": "/api/users",
      "api_endpoints": [
        "/register",
        "/login",
        "/profile",
        "/change-password"
      ]
    },
    "keywords": [
      "user",
      "const",
      "password",
      "userservice",
      "next",
      "authservice",
      "validationerror",
      "email",
      "throw",
      "request",
      "response",
      "nextfunction",
      "name",
      "required",
      "users",
      "async",
      "promise",
      "void",
      "register",
      "import"
    ],
    "summary": "This document defines a UserController class that handles user authentication and management in an Express.js application. It provides methods for user registration (requiring email, password, and name with validation) and user login (returning a JWT token). The controller integrates with AuthService and UserService to perform core authentication and user profile operations."
  },
  "cacheInfo": {
    "cached": true,
    "hash": "21080d426b044ff56f9d62f3423e64dd57a510e6b47331676ca5d517fdaccae9"
  },
  "performance": {
    "totalTimeMs": 7,
    "tokens": {
      "input": 2373,
      "output": 1368,
      "total": 3741
    },
    "costUsd": 0.0007152600000000001
  }
}