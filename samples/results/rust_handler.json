{
  "file": "rust/handler.rs",
  "classification": {
    "template": "software_project",
    "confidence": 1,
    "domain": "software",
    "docType": "Code Module"
  },
  "graphStructure": {
    "cypher": "CREATE (doc:Document {\n      id: \"HTTP Handlers API\",\n      title: \"HTTP Handlers API\",\n      domain: \"software\",\n      doc_type: \"Code Module\"\n    })\nCREATE (e0:Module {name: \"HTTP Handlers API\", description: \"REST API operations for vector database\"})\nCREATE (doc)-[:MENTIONS]->(e0)\nCREATE (e1:Function {name: \"create_router\", description: \"Creates the API router with defined routes\"})\nCREATE (doc)-[:MENTIONS]->(e1)\nCREATE (e2:Function {name: \"insert_vector\", description: \"Handles POST /vectors for inserting vectors\"})\nCREATE (doc)-[:MENTIONS]->(e2)\nCREATE (e3:Function {name: \"search_vectors\", description: \"Handles POST /search for searching vectors\"})\nCREATE (doc)-[:MENTIONS]->(e3)\nCREATE (e4:Function {name: \"delete_vector\", description: \"Handles DELETE /vectors/:id for deleting vectors\"})\nCREATE (doc)-[:MENTIONS]->(e4)\nCREATE (e5:Function {name: \"health_check\", description: \"Handles GET /health for health checks\"})\nCREATE (doc)-[:MENTIONS]->(e5)\nCREATE (e6:Function {name: \"get_stats\", description: \"Handles GET /stats for retrieving statistics\"})\nCREATE (doc)-[:MENTIONS]->(e6)\nCREATE (e7:API {name: \"REST API\", description: \"Defined HTTP endpoints for vector operations\"})\nCREATE (doc)-[:MENTIONS]->(e7)\nCREATE (e8:Database {name: \"VectorDB\", description: \"Vector database for storing and querying vectors\"})\nCREATE (doc)-[:MENTIONS]->(e8)\nCREATE (e9:Dependency {name: \"axum\", description: \"Web framework for building APIs\"})\nCREATE (doc)-[:MENTIONS]->(e9)\nCREATE (e10:Dependency {name: \"serde\", description: \"Serialization and deserialization library\"})\nCREATE (doc)-[:MENTIONS]->(e10)\nCREATE (e11:Dependency {name: \"tokio\", description: \"Asynchronous runtime\"})\nCREATE (doc)-[:MENTIONS]->(e11)\nCREATE (e12:Dependency {name: \"std\", description: \"Standard library\"})\nCREATE (doc)-[:MENTIONS]->(e12)\nCREATE (e13:Class {name: \"InsertRequest\", description: \"Request model for inserting vectors\"})\nCREATE (doc)-[:MENTIONS]->(e13)\nCREATE (e14:Class {name: \"SearchRequest\", description: \"Request model for searching vectors\"})\nCREATE (doc)-[:MENTIONS]->(e14)\nCREATE (e15:Class {name: \"SearchResponse\", description: \"Response model for search results\"})\nCREATE (doc)-[:MENTIONS]->(e15)\nCREATE (e16:Class {name: \"InsertResponse\", description: \"Response model for insert operations\"})\nCREATE (doc)-[:MENTIONS]->(e16)\nCREATE (e17:Class {name: \"DeleteResponse\", description: \"Response model for delete operations\"})\nCREATE (doc)-[:MENTIONS]->(e17)\nCREATE (e18:Class {name: \"HealthResponse\", description: \"Response model for health checks\"})\nCREATE (doc)-[:MENTIONS]->(e18)\nCREATE (e19:Class {name: \"SearchResult\", description: \"Model for individual search results\"})\nCREATE (doc)-[:MENTIONS]->(e19)\nCREATE (e20:Configuration {name: \"SharedDB\", description: \"Shared database state using Arc and RwLock\"})\nCREATE (doc)-[:MENTIONS]->(e20)",
    "entities": [
      {
        "type": "Module",
        "properties": {
          "name": "HTTP Handlers API",
          "description": "REST API operations for vector database"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "create_router",
          "description": "Creates the API router with defined routes"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "insert_vector",
          "description": "Handles POST /vectors for inserting vectors"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "search_vectors",
          "description": "Handles POST /search for searching vectors"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "delete_vector",
          "description": "Handles DELETE /vectors/:id for deleting vectors"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "health_check",
          "description": "Handles GET /health for health checks"
        }
      },
      {
        "type": "Function",
        "properties": {
          "name": "get_stats",
          "description": "Handles GET /stats for retrieving statistics"
        }
      },
      {
        "type": "API",
        "properties": {
          "name": "REST API",
          "description": "Defined HTTP endpoints for vector operations"
        }
      },
      {
        "type": "Database",
        "properties": {
          "name": "VectorDB",
          "description": "Vector database for storing and querying vectors"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "axum",
          "description": "Web framework for building APIs"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "serde",
          "description": "Serialization and deserialization library"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "tokio",
          "description": "Asynchronous runtime"
        }
      },
      {
        "type": "Dependency",
        "properties": {
          "name": "std",
          "description": "Standard library"
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "InsertRequest",
          "description": "Request model for inserting vectors"
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "SearchRequest",
          "description": "Request model for searching vectors"
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "SearchResponse",
          "description": "Response model for search results"
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "InsertResponse",
          "description": "Response model for insert operations"
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "DeleteResponse",
          "description": "Response model for delete operations"
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "HealthResponse",
          "description": "Response model for health checks"
        }
      },
      {
        "type": "Class",
        "properties": {
          "name": "SearchResult",
          "description": "Model for individual search results"
        }
      },
      {
        "type": "Configuration",
        "properties": {
          "name": "SharedDB",
          "description": "Shared database state using Arc and RwLock"
        }
      }
    ],
    "relationships": [
      {
        "type": "IMPORTS",
        "source": "HTTP Handlers API",
        "target": "axum",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "HTTP Handlers API",
        "target": "serde",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "HTTP Handlers API",
        "target": "std",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "HTTP Handlers API",
        "target": "tokio",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "HTTP Handlers API",
        "target": "crate::model",
        "properties": {}
      },
      {
        "type": "IMPORTS",
        "source": "HTTP Handlers API",
        "target": "crate::VectorDB",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "HTTP Handlers API",
        "target": "create_router",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "HTTP Handlers API",
        "target": "insert_vector",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "HTTP Handlers API",
        "target": "search_vectors",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "HTTP Handlers API",
        "target": "delete_vector",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "HTTP Handlers API",
        "target": "health_check",
        "properties": {}
      },
      {
        "type": "CONTAINS",
        "source": "HTTP Handlers API",
        "target": "get_stats",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "create_router",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "insert_vector",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "search_vectors",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "delete_vector",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "health_check",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "insert_vector",
        "target": "InsertRequest",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "insert_vector",
        "target": "InsertResponse",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "search_vectors",
        "target": "SearchRequest",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "search_vectors",
        "target": "SearchResponse",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "search_vectors",
        "target": "SearchResult",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "delete_vector",
        "target": "DeleteResponse",
        "properties": {}
      },
      {
        "type": "DEPENDS_ON",
        "source": "health_check",
        "target": "HealthResponse",
        "properties": {}
      },
      {
        "type": "EXPOSES",
        "source": "create_router",
        "target": "REST API",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "insert_vector",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "search_vectors",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "delete_vector",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "ACCESSES",
        "source": "health_check",
        "target": "VectorDB",
        "properties": {}
      },
      {
        "type": "CALLS",
        "source": "insert_vector",
        "target": "VectorDB",
        "properties": {
          "method": "insert"
        }
      },
      {
        "type": "CALLS",
        "source": "search_vectors",
        "target": "VectorDB",
        "properties": {
          "method": "search"
        }
      },
      {
        "type": "CALLS",
        "source": "delete_vector",
        "target": "VectorDB",
        "properties": {
          "method": "delete"
        }
      },
      {
        "type": "CALLS",
        "source": "health_check",
        "target": "VectorDB",
        "properties": {
          "method": "count"
        }
      }
    ]
  },
  "fulltextMetadata": {
    "title": "HTTP Handlers API",
    "domain": "software",
    "docType": "Code Module",
    "extractedFields": {
      "module_name": "HTTP Handlers API",
      "module_description": "REST API operations for vector database",
      "function_name": [
        "create_router",
        "insert_vector",
        "search_vectors",
        "delete_vector",
        "health_check",
        "get_stats"
      ],
      "function_description": [
        "Creates the API router with defined routes",
        "Handles POST /vectors for inserting vectors",
        "Handles POST /search for searching vectors",
        "Handles DELETE /vectors/:id for deleting vectors",
        "Handles GET /health for health checks",
        "Handles GET /stats for retrieving statistics"
      ],
      "api_name": "REST API",
      "api_description": "Defined HTTP endpoints for vector operations",
      "database_name": "VectorDB",
      "database_description": "Vector database for storing and querying vectors",
      "dependency_name": [
        "axum",
        "serde",
        "tokio",
        "std"
      ],
      "dependency_description": [
        "Web framework for building APIs",
        "Serialization and deserialization library",
        "Asynchronous runtime",
        "Standard library"
      ],
      "class_name": [
        "InsertRequest",
        "SearchRequest",
        "SearchResponse",
        "InsertResponse",
        "DeleteResponse",
        "HealthResponse",
        "SearchResult"
      ],
      "class_description": [
        "Request model for inserting vectors",
        "Request model for searching vectors",
        "Response model for search results",
        "Response model for insert operations",
        "Response model for delete operations",
        "Response model for health checks",
        "Model for individual search results"
      ],
      "configuration_name": "SharedDB",
      "configuration_description": "Shared database state using Arc and RwLock"
    },
    "keywords": [
      "json",
      "state",
      "string",
      "vectors",
      "vector",
      "await",
      "statuscode",
      "delete",
      "shareddb",
      "serialize",
      "search",
      "post",
      "router",
      "route",
      "health",
      "async",
      "success",
      "derive",
      "struct",
      "insert"
    ],
    "summary": "This Rust code implements HTTP handlers for a vector database API using the Axum framework. It provides REST endpoints for inserting vectors, performing similarity searches, deleting vectors, and checking system health/stats. The API manages concurrent access to the vector database through thread-safe locking mechanisms."
  },
  "cacheInfo": {
    "cached": false,
    "hash": "019fa67359fdb056dd06895a2f482566db2ac75c44807e3deda21ac76e006221"
  },
  "performance": {
    "totalTimeMs": 66372,
    "tokens": {
      "input": 781,
      "output": 2040,
      "total": 2821
    },
    "costUsd": 0.0006805400000000001
  }
}